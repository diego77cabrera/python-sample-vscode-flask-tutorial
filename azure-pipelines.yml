# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

#trigger:
#- master

#pool:
#  vmImage: 'ubuntu-latest'

#steps:
#- script: echo Hello, world!
#  displayName: 'Run a one-line script'

#- script: |
#    echo Add other tasks to build, test, and deploy your project.
#    echo See https://aka.ms/yaml
#  displayName: 'Run a multi-line script'

variables:
  ConnectedServiceName: 'Visual Studio Professional (86168a69-7fb7-4059-8a5d-a99b3afdb809)'
  WebAppName: 'webappfercab1'

trigger:
- master

pool:
  name: Hosted Ubuntu 1604

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.6'
    architecture: 'x64'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'
    replaceExistingArchive: true
    verbose: # Optional

- task: AzureRMWebAppDeployment@4
  displayName: Azure App Service Deploy
  inputs:
    appType: webAppLinux
    RuntimeStack: 'PYTHON|3.6'
    ConnectedServiceName: $(ConnectedServiceName)
    WebAppName: $(WebAppName)
    Package: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'

    # The following command is specific to the python-sample-vscode-flask-tutorial code.
    # You may or may not need a startup command for your own app.

    StartupCommand: 'gunicorn --bind=0.0.0.0 --workers=4 startup:app'